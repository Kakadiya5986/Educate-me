############################################################################################################
# CSCI 5409 Cloud Computing
# Group 23 - 3 Musketeers                                                                                  
# Resource creation:                                                                                       
# - Cognito User Pool                                                                                      
# - Cognito App Client     
# - 5 DynamoDB tables                                          LambdaGetBookingSlotIn                                             
# - 12 Lambda Functions   
# - 1 EventBridge Rule                                                                                    
# - 11 API gateway: resources and methods                                                                  
# - Lambda permissions                                                                                      
#                                                                                                          
# Reference taken from-                                                                                     
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html        
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html  
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html         
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html 
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html      
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-resource.html     
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html 
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-dynamodb.html
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-lambda.html

############################################################################################################
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  CognitoDomain:
      Type: String
      MinLength: 3
      MaxLength: 63
      AllowedPattern: ^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$
      Description: Enter a string. Must be alpha numeric 3-63 in length.
      Default: unitedtutoringusers # Name of the Cognito User Pool Domain

  region:
    Type: String
    Default: eu-north-1 # Region of the resources
  BucketName:
    Type: String
    Default: united-tutoring-lambda # Name of the S3 bucket where the lambda code is stored
  PDynamoDBAvailability: # Name of the DynamoDB table for availability
    Type: String
    Default: availability
  PDynamoDBBookingDetails: # Name of the DynamoDB table for booking details
    Type: String
    Default: bookingdetails
  PDynamoDBSlots: # Name of the DynamoDB table for slots
    Type: String
    Default: slots
  PDynamoDBStudentDetails: # Name of the DynamoDB table for student details
    Type: String
    Default: student-details
  PDynamoDBTutorDetails: # Name of the DynamoDB table for tutor details
    Type: String
    Default: tutor-details
  PLambdaCronJob: # Name of the Lambda function for cron job
    Type: String
    Default: united-tutoring-cronjob
  PLambdaGetSlotDetails: # Name of the Lambda function for get slot details
    Type: String
    Default: united-tutoring-getslotdetails
  PLambdaSaveAvailability: # Name of the Lambda function for save availability
    Type: String
    Default: united-tutoring-save-availability
  PLambdaGetBookingSlotInPending: # Name of the Lambda function for get booking slot in pending
    Type: String
    Default: united-tutoring-getBookingSlotInPending
  PLambdaGetProfileImg: # Name of the Lambda function for get profile image
    Type: String
    Default: united-tutoring-get-profile-img
  PLambdaSaveProfileImg: # Name of the Lambda function for save profile image
    Type: String
    Default: united-tutoring-save-profile-img
  PLambdasSaveUserDetails: # Name of the Lambda function for save user details
    Type: String
    Default: united-tutoring-save-user-details
  PLambdaUpdateRequest: # Name of the Lambda function for update request
    Type: String
    Default: united-tutoring-updateRequest
  PLambdaGetTutorBookings: # Name of the Lambda function for get tutor bookings
    Type: String
    Default: united-tutoring-get-tutor-bookings
  PLambdaSubscribeForEmailNotification: # Name of the Lambda function for subscribe for email notification
    Type: String
    Default: united-tutoring-subscribeForEmailNotification
  PLambdaGetUserDetails: # Name of the Lambda function for get user details
    Type: String
    Default: united-tutoring-get-user-details
  PLambdaSaveBookingDetails: # Name of the Lambda function for save booking details
    Type: String
    Default: united-tutoring-savebookingdetails
  PCronJobRule: # Name of the EventBridge Rule for cron job
    Type: String
    Default: united-tutoring-cron-job-rule

Resources: # Resources to be created
  UserPool:  # Cognito User Pool
    Type: "AWS::Cognito::UserPool" # Type of resource
    
    Properties: # Properties of the resource
      UsernameConfiguration:  # Username configuration
        CaseSensitive: false # Username is not case sensitive
      Schema: # Schema of the user pool
        - Name: given_name   
          AttributeDataType: String
          DeveloperOnlyAttribute: false  
          Mutable: true # Attribute can be changed
          Required: true # Attribute is required
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        - Name: family_name # Attribute name
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true 
          Required: true 
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        - Name: email
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: true
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        - Name: phone_number
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: true
          StringAttributeConstraints:
              MinLength: "0"
              MaxLength: "2048"
        - Name: userType
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
              MinLength: "0"
              MaxLength: "2048"
      AutoVerifiedAttributes:
        - email
      UserPoolName: !Sub ${CognitoDomain}-user-pool # Name of the user pool
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE # Default email option


  UserPoolClient: # Cognito App Client
    Type: AWS::Cognito::UserPoolClient # Type of resource
    Properties:
      UserPoolId: !Ref UserPool  # Reference to the user pool
      AllowedOAuthFlowsUserPoolClient: true # OAuth flow is enabled
      GenerateSecret: false  
      CallbackURLs:
        - http://localhost:3000  # Callback URL
      AllowedOAuthFlows: # OAuth flows enabled
        - code # Authorization code grant flow
        - implicit # Implicit grant flow
      AllowedOAuthScopes: # OAuth scopes enabled
        - openid # OpenID Connect scope
      SupportedIdentityProviders: # Identity providers supported
        - COGNITO # Cognito user pool

  UserPoolDomain: # Cognito User Pool Domain
    Type: AWS::Cognito::UserPoolDomain # Type of resource
    Properties: # Properties of the resource
      Domain: !Ref CognitoDomain # Name of the domain
      UserPoolId: !Ref UserPool # Reference to the user pool
      

  LambdaCronJob: # Lambda function for cron job
      Type: AWS::Lambda::Function # Type of resource
      Properties: # Properties of the resource
        FunctionName: !Ref PLambdaCronJob # Name of the function
        Handler: index.handler # Handler of the function
        Role: arn:aws:iam::835032380954:role/cronjob-role # Role of the function
        Code: # Code of the function
          S3Bucket: !Ref BucketName # Reference to the S3 bucket
          S3Key: cronjob.zip # Name of the zip file
        Runtime: nodejs18.x # Runtime of the function
        Timeout: 5 # Timeout of the function
        TracingConfig: # Tracing configuration of the function
          Mode: Active  # Tracing is enabled
    
  LambdaGetSlotDetails:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Ref PLambdaGetSlotDetails
        Handler: index.handler
        Role: arn:aws:iam::835032380954:role/role-dynamodb
        Code:
          S3Bucket: !Ref BucketName
          S3Key: getslotdetails.zip
        Runtime: nodejs18.x
        Timeout: 5
        TracingConfig:
          Mode: Active

  LambdaGetSlotDetailsPermission: # Permission for the lambda function
    Type: 'AWS::Lambda::Permission' # Type of resource
    Properties:  # Properties of the resource
      Action: 'lambda:invokeFunction' # Action to be performed
      FunctionName: # Reference to the lambda function
        'Fn::GetAtt': # Reference to the lambda function
          - LambdaGetSlotDetails # Name of the lambda function
          - Arn # ARN of the lambda function
      Principal: apigateway.amazonaws.com # Principal of the permission
      SourceArn: # ARN of the source
        'Fn::Join': # Join the strings
          - '' # Joining character
          - - 'arn:aws:execute-api:' # ARN of the API gateway
            - Ref: 'AWS::Region' # Region of the API gateway
            - ':' # ARN of the API gateway
            - Ref: 'AWS::AccountId' # Account ID of the API gateway
            - ':' # ARN of the API gateway
            - Ref: UnitedTutoringAPIs # Reference to the API gateway
            - /*/POST/get-availability # ARN of the API gateway

  LambdaSaveAvailability:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Ref PLambdaSaveAvailability
        Handler: index.handler
        Role: arn:aws:iam::835032380954:role/role-dynamodb
        Code:
          S3Bucket: !Ref BucketName
          S3Key: save-availability.zip
        Runtime: nodejs18.x
        Timeout: 5
        TracingConfig:
          Mode: Active

  LambdaSaveAvailabilityPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - LambdaSaveAvailability
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: UnitedTutoringAPIs
            - /*/POST/save-availability

  LambdaGetBookingSlotInPending:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Ref PLambdaGetBookingSlotInPending
        Handler: index.handler
        Role: arn:aws:iam::835032380954:role/role-dynamodb
        Code:
          S3Bucket: !Ref BucketName
          S3Key: getBookingSlotInPending.zip
        Runtime: nodejs18.x
        Timeout: 5
        TracingConfig:
          Mode: Active

  LambdaGetBookingSlotInPendingPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - LambdaGetBookingSlotInPending
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: UnitedTutoringAPIs
            - /*/GET/getbookingslotinpending

  LambdaGetProfileImg:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Ref PLambdaGetProfileImg
        Handler: index.handler
        Role: arn:aws:iam::835032380954:role/role-s3
        Code:
          S3Bucket: !Ref BucketName
          S3Key: get-profile-img.zip
        Runtime: nodejs18.x
        Timeout: 5
        TracingConfig:
          Mode: Active

  LambdaGetProfileImgPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - LambdaGetProfileImg
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: UnitedTutoringAPIs
            - /*/GET/get-profile-img

  LambdaSaveProfileImg:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Ref PLambdaSaveProfileImg
        Handler: index.handler
        Role: arn:aws:iam::835032380954:role/role-s3
        Code:
          S3Bucket: !Ref BucketName
          S3Key: save-profile-img.zip
        Runtime: nodejs18.x
        Timeout: 5
        TracingConfig:
          Mode: Active

  LambdaSaveProfileImgPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - LambdaSaveProfileImg
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: UnitedTutoringAPIs
            - /*/PUT/save-profile-img

  LambdasSaveUserDetails:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Ref PLambdasSaveUserDetails
        Handler: index.handler
        Role: arn:aws:iam::835032380954:role/role-dynamodb
        Code:
          S3Bucket: !Ref BucketName
          S3Key: save-user-details.zip
        Runtime: nodejs18.x
        Timeout: 5
        TracingConfig:
          Mode: Active

  LambdasSaveUserDetailsPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - LambdasSaveUserDetails
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: UnitedTutoringAPIs
            - /*/POST/save-user-details

  LambdaUpdateRequest:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Ref PLambdaUpdateRequest
        Handler: index.handler
        Role: arn:aws:iam::835032380954:role/role-dynamodb
        Code:
          S3Bucket: !Ref BucketName
          S3Key: updateRequest.zip
        Runtime: nodejs18.x
        Timeout: 5
        TracingConfig:
          Mode: Active

  LambdaUpdateRequestPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - LambdaUpdateRequest
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: UnitedTutoringAPIs
            - /*/POST/updaterequest

  LambdaGetTutorBookings:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Ref PLambdaGetTutorBookings
        Handler: index.handler
        Role: arn:aws:iam::835032380954:role/role-dynamodb
        Code:
          S3Bucket: !Ref BucketName
          S3Key: get-tutor-bookings.zip
        Runtime: nodejs18.x
        Timeout: 5
        TracingConfig:
          Mode: Active

  LambdaGetTutorBookingsPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - LambdaGetTutorBookings
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: UnitedTutoringAPIs
            - /*/GET/get-tutor-bookings

  LambdaSubscribeForEmailNotification:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Ref PLambdaSubscribeForEmailNotification
        Handler: index.handler
        Role: arn:aws:iam::835032380954:role/SNStest-role-072qricj
        Code:
          S3Bucket: !Ref BucketName
          S3Key: subscribeForEmailNotification.zip
        Runtime: nodejs18.x
        Timeout: 5
        TracingConfig:
          Mode: Active

  LambdaSubscribeForEmailNotificationPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - LambdaSubscribeForEmailNotification
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: UnitedTutoringAPIs
            - /*/GET/subscribe

  LambdaGetUserDetails:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Ref PLambdaGetUserDetails
        Handler: index.handler
        Role: arn:aws:iam::835032380954:role/role-dynamodb
        Code:
          S3Bucket: !Ref BucketName
          S3Key: get-user-details.zip
        Runtime: nodejs18.x
        Timeout: 5
        TracingConfig:
          Mode: Active

  LambdaGetUserDetailsPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - LambdaGetUserDetails
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: UnitedTutoringAPIs
            - /*/POST/get-user-details

  LambdaSaveBookingDetails:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Ref PLambdaSaveBookingDetails
        Handler: index.handler
        Role: arn:aws:iam::835032380954:role/role-dynamodb
        Code:
          S3Bucket: !Ref BucketName
          S3Key: savebookingdetails.zip
        Runtime: nodejs18.x
        Timeout: 5
        TracingConfig:
          Mode: Active
  
  LambdaSaveBookingDetailsPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - LambdaSaveBookingDetails
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: UnitedTutoringAPIs
            - /*/POST/saveslot-booking

  DynamoDBAvailability:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: !Ref PDynamoDBAvailability
  DynamoDBBookingDetails:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "bookingId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "bookingId"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: !Ref PDynamoDBBookingDetails
  DynamoDBSlots:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: !Ref PDynamoDBSlots
  DynamoDBStudentDetails:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: !Ref PDynamoDBStudentDetails
  DynamoDBTutorDetails:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: !Ref PDynamoDBTutorDetails

  CronJobRule: 
      Type: AWS::Events::Rule
      Properties: 
        Description: "CronJob"
        ScheduleExpression: "rate(1 hour)"
        Name: !Ref PCronJobRule
        State: "ENABLED"
        Targets: 
          -
            Arn: 
                'Fn::GetAtt':
                      - LambdaCronJob
                      - Arn
            Id: CronJobId

  UnitedTutoringAPIs:
    Type: AWS::ApiGateway::RestApi
    
    Properties:
      Name: UnitedTutoring
      Description: united tutoring
       

  Authorizer:
        Type: AWS::ApiGateway::Authorizer
        Properties:
          IdentitySource: method.request.header.authorization
          Name: CognitoAuthorizer
          ProviderARNs: 
            - {"Fn::Join": ["", ["arn:aws:cognito-idp:", {Ref: "AWS::Region"}, ":", {Ref: "AWS::AccountId"}, ":userpool/", Ref: UserPool]]}

               
          RestApiId: !Ref UnitedTutoringAPIs
          Type: COGNITO_USER_POOLS

  ResourceGetSlotDetails:
        Type: AWS::ApiGateway::Resource
        Properties:
          RestApiId: !Ref UnitedTutoringAPIs
          PathPart: get-availability
          ParentId:
            Fn::GetAtt:
              - UnitedTutoringAPIs
              - RootResourceId

  GetSlotDetailsOption:
      Type: AWS::ApiGateway::Method
      Properties:
        AuthorizationType: NONE
        RestApiId:
          Ref: UnitedTutoringAPIs
        ResourceId:
          Ref: ResourceGetSlotDetails
        HttpMethod: OPTIONS
        Integration:
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            ResponseTemplates:
              application/json: ''
          RequestTemplates:
            application/json: '{"statusCode": 200}'
          Type: MOCK
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false

  GetSlotDetailsPost:
      Type: 'AWS::ApiGateway::Method'
      Properties:
        ApiKeyRequired: false
        AuthorizationType: COGNITO_USER_POOLS
        AuthorizerId: !Ref Authorizer
        HttpMethod: POST
        ResourceId:
          Ref: ResourceGetSlotDetails
        RestApiId:
          Ref: UnitedTutoringAPIs
        
        Integration:
          IntegrationHttpMethod: POST
          Type: AWS_PROXY
          Uri:
            'Fn::Join':
              - ''
              - - 'arn:aws:apigateway:'
                - Ref: 'AWS::Region'
                - ':lambda:path/2015-03-31/functions/'
                - 'Fn::GetAtt':
                    - LambdaGetSlotDetails
                    - Arn
                - /invocations
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'POST'"
              "method.response.header.Access-Control-Allow-Origin" : "'*'"
          
            ResponseTemplates:
              application/json: ''
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false            

  ResourceGetProfileImage:
        Type: AWS::ApiGateway::Resource
        Properties:
          RestApiId: !Ref UnitedTutoringAPIs
          PathPart: get-profile-img
          ParentId:
            Fn::GetAtt:
              - UnitedTutoringAPIs
              - RootResourceId

  GetProfileImageOptions:
      Type: AWS::ApiGateway::Method
      Properties:
        AuthorizationType: NONE
        RestApiId:
          Ref: UnitedTutoringAPIs
        ResourceId:
          Ref: ResourceGetProfileImage
        HttpMethod: OPTIONS
        Integration:
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            ResponseTemplates:
              application/json: ''
          RequestTemplates:
            application/json: '{"statusCode": 200}'
          Type: MOCK
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false
  GetProfileImageGet:
      Type: 'AWS::ApiGateway::Method'
      Properties:
        ApiKeyRequired: false
        AuthorizationType: COGNITO_USER_POOLS
        AuthorizerId: !Ref Authorizer
        HttpMethod: GET
        ResourceId:
          Ref: ResourceGetProfileImage
        RestApiId:
          Ref: UnitedTutoringAPIs
        
        Integration:
          IntegrationHttpMethod: GET
          Type: AWS_PROXY
          Uri:
            'Fn::Join':
              - ''
              - - 'arn:aws:apigateway:'
                - Ref: 'AWS::Region'
                - ':lambda:path/2015-03-31/functions/'
                - 'Fn::GetAtt':
                    - LambdaGetProfileImg
                    - Arn
                - /invocations
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'GET'"
              "method.response.header.Access-Control-Allow-Origin" : "'*'"
          
            ResponseTemplates:
              application/json: ''
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false            

  ResourceTutorBooking:
        Type: AWS::ApiGateway::Resource
        Properties:
          RestApiId: !Ref UnitedTutoringAPIs
          PathPart: get-tutor-bookings
          ParentId:
            Fn::GetAtt:
              - UnitedTutoringAPIs
              - RootResourceId
  TutorBookingOption:
      Type: AWS::ApiGateway::Method
      Properties:
        AuthorizationType: NONE
        RestApiId:
          Ref: UnitedTutoringAPIs
        ResourceId:
          Ref: ResourceTutorBooking
        HttpMethod: OPTIONS
        Integration:
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            ResponseTemplates:
              application/json: ''
          RequestTemplates:
            application/json: '{"statusCode": 200}'
          Type: MOCK
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false
  TutorBookingGet:
      Type: 'AWS::ApiGateway::Method'
      Properties:
        ApiKeyRequired: false
        AuthorizationType: COGNITO_USER_POOLS
        AuthorizerId: !Ref Authorizer
        HttpMethod: GET
        ResourceId:
          Ref: ResourceTutorBooking
        RestApiId:
          Ref: UnitedTutoringAPIs
        
        Integration:
          IntegrationHttpMethod: GET
          Type: AWS_PROXY
          Uri:
            'Fn::Join':
              - ''
              - - 'arn:aws:apigateway:'
                - Ref: 'AWS::Region'
                - ':lambda:path/2015-03-31/functions/'
                - 'Fn::GetAtt':
                    - LambdaGetTutorBookings
                    - Arn
                - /invocations
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'GET'"
              "method.response.header.Access-Control-Allow-Origin" : "'*'"
          
            ResponseTemplates:
              application/json: ''
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false            

  ResourceUserDetails:
        Type: AWS::ApiGateway::Resource
        Properties:
          RestApiId: !Ref UnitedTutoringAPIs
          PathPart: get-user-details
          ParentId:
            Fn::GetAtt:
              - UnitedTutoringAPIs
              - RootResourceId
  UserDetailsOption:
      Type: AWS::ApiGateway::Method
      Properties:
        AuthorizationType: NONE
        RestApiId:
          Ref: UnitedTutoringAPIs
        ResourceId:
          Ref: ResourceUserDetails
        HttpMethod: OPTIONS
        Integration:
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            ResponseTemplates:
              application/json: ''
          RequestTemplates:
            application/json: '{"statusCode": 200}'
          Type: MOCK
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false
  UserDetailsPost:
      Type: 'AWS::ApiGateway::Method'
      Properties:
        ApiKeyRequired: false
        AuthorizationType: COGNITO_USER_POOLS
        AuthorizerId: !Ref Authorizer
        HttpMethod: POST
        ResourceId:
          Ref: ResourceUserDetails
        RestApiId:
          Ref: UnitedTutoringAPIs
        
        Integration:
          IntegrationHttpMethod: POST
          Type: AWS_PROXY
          Uri:
            'Fn::Join':
              - ''
              - - 'arn:aws:apigateway:'
                - Ref: 'AWS::Region'
                - ':lambda:path/2015-03-31/functions/'
                - 'Fn::GetAtt':
                    - LambdaGetUserDetails
                    - Arn
                - /invocations
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'GET'"
              "method.response.header.Access-Control-Allow-Origin" : "'*'"
          
            ResponseTemplates:
              application/json: ''
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false            

  ResourceBookingSlotInPending:
        Type: AWS::ApiGateway::Resource
        Properties:
          RestApiId: !Ref UnitedTutoringAPIs
          PathPart: getbookingslotinpending
          ParentId:
            Fn::GetAtt:
              - UnitedTutoringAPIs
              - RootResourceId
  BookingSlotInPendingOption:
      Type: AWS::ApiGateway::Method
      Properties:
        AuthorizationType: NONE
        RestApiId:
          Ref: UnitedTutoringAPIs
        ResourceId:
          Ref: ResourceBookingSlotInPending
        HttpMethod: OPTIONS
        Integration:
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            ResponseTemplates:
              application/json: ''
          RequestTemplates:
            application/json: '{"statusCode": 200}'
          Type: MOCK
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false
  BookingSlotInPendingPost:
      Type: 'AWS::ApiGateway::Method'
      Properties:
        ApiKeyRequired: false
        AuthorizationType: COGNITO_USER_POOLS
        AuthorizerId: !Ref Authorizer
        HttpMethod: POST
        ResourceId:
          Ref: ResourceBookingSlotInPending
        RestApiId:
          Ref: UnitedTutoringAPIs
        
        Integration:
          IntegrationHttpMethod: POST
          Type: AWS_PROXY
          Uri:
            'Fn::Join':
              - ''
              - - 'arn:aws:apigateway:'
                - Ref: 'AWS::Region'
                - ':lambda:path/2015-03-31/functions/'
                - 'Fn::GetAtt':
                    - LambdaGetBookingSlotInPending
                    - Arn
                - /invocations
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'GET'"
              "method.response.header.Access-Control-Allow-Origin" : "'*'"
          
            ResponseTemplates:
              application/json: ''
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false            

  ResourceSaveAvailability:
        Type: AWS::ApiGateway::Resource
        Properties:
          RestApiId: !Ref UnitedTutoringAPIs
          PathPart: save-availability
          ParentId:
            Fn::GetAtt:
              - UnitedTutoringAPIs
              - RootResourceId
  SaveAvailabilityOption:
      Type: AWS::ApiGateway::Method
      Properties:
        AuthorizationType: NONE
        RestApiId:
          Ref: UnitedTutoringAPIs
        ResourceId:
          Ref: ResourceSaveAvailability
        HttpMethod: OPTIONS
        Integration:
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            ResponseTemplates:
              application/json: ''
          RequestTemplates:
            application/json: '{"statusCode": 200}'
          Type: MOCK
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false
  SaveAvailabilityPost:
      Type: 'AWS::ApiGateway::Method'
      Properties:
        ApiKeyRequired: false
        AuthorizationType: COGNITO_USER_POOLS
        AuthorizerId: !Ref Authorizer
        HttpMethod: POST
        ResourceId:
          Ref: ResourceSaveAvailability
        RestApiId:
          Ref: UnitedTutoringAPIs
        
        Integration:
          IntegrationHttpMethod: POST
          Type: AWS_PROXY
          Uri:
            'Fn::Join':
              - ''
              - - 'arn:aws:apigateway:'
                - Ref: 'AWS::Region'
                - ':lambda:path/2015-03-31/functions/'
                - 'Fn::GetAtt':
                    - LambdaSaveAvailability
                    - Arn
                - /invocations
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'GET'"
              "method.response.header.Access-Control-Allow-Origin" : "'*'"
          
            ResponseTemplates:
              application/json: ''
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false            

  ResourceSaveProfileImage:
        Type: AWS::ApiGateway::Resource
        Properties:
          RestApiId: !Ref UnitedTutoringAPIs
          PathPart: save-profile-img
          ParentId:
            Fn::GetAtt:
              - UnitedTutoringAPIs
              - RootResourceId
  SaveProfileImageOption:
      Type: AWS::ApiGateway::Method
      Properties:
        AuthorizationType: NONE
        RestApiId:
          Ref: UnitedTutoringAPIs
        ResourceId:
          Ref: ResourceSaveProfileImage
        HttpMethod: OPTIONS
        Integration:
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            ResponseTemplates:
              application/json: ''
          RequestTemplates:
            application/json: '{"statusCode": 200}'
          Type: MOCK
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false
  SaveProfileImagePut:
      Type: 'AWS::ApiGateway::Method'
      Properties:
        ApiKeyRequired: false
        AuthorizationType: COGNITO_USER_POOLS
        AuthorizerId: !Ref Authorizer
        HttpMethod: PUT
        ResourceId:
          Ref: ResourceSaveProfileImage
        RestApiId:
          Ref: UnitedTutoringAPIs
        
        Integration:
          IntegrationHttpMethod: PUT
          Type: AWS_PROXY
          Uri:
            'Fn::Join':
              - ''
              - - 'arn:aws:apigateway:'
                - Ref: 'AWS::Region'
                - ':lambda:path/2015-03-31/functions/'
                - 'Fn::GetAtt':
                    - LambdaSaveProfileImg
                    - Arn
                - /invocations
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'PUT'"
              "method.response.header.Access-Control-Allow-Origin" : "'*'"
          
            ResponseTemplates:
              application/json: ''
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false            

  ResourecSaveUserDetails:
        Type: AWS::ApiGateway::Resource
        Properties:
          RestApiId: !Ref UnitedTutoringAPIs
          PathPart: save-user-details
          ParentId:
            Fn::GetAtt:
              - UnitedTutoringAPIs
              - RootResourceId
  SaveUserDetailsOption:
      Type: AWS::ApiGateway::Method
      Properties:
        AuthorizationType: NONE
        RestApiId:
          Ref: UnitedTutoringAPIs
        ResourceId:
          Ref: ResourecSaveUserDetails
        HttpMethod: OPTIONS
        Integration:
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            ResponseTemplates:
              application/json: ''
          RequestTemplates:
            application/json: '{"statusCode": 200}'
          Type: MOCK
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false
  SaveUserDetailsPost:
      Type: 'AWS::ApiGateway::Method'
      Properties:
        ApiKeyRequired: false
        AuthorizationType: COGNITO_USER_POOLS
        AuthorizerId: !Ref Authorizer
        HttpMethod: POST
        ResourceId:
          Ref: ResourecSaveUserDetails
        RestApiId:
          Ref: UnitedTutoringAPIs
        
        Integration:
          IntegrationHttpMethod: POST
          Type: AWS_PROXY
          Uri:
            'Fn::Join':
              - ''
              - - 'arn:aws:apigateway:'
                - Ref: 'AWS::Region'
                - ':lambda:path/2015-03-31/functions/'
                - 'Fn::GetAtt':
                    - LambdasSaveUserDetails
                    - Arn
                - /invocations
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'POST'"
              "method.response.header.Access-Control-Allow-Origin" : "'*'"
          
            ResponseTemplates:
              application/json: ''
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false            

  ResourceSaveSlotBooking:
        Type: AWS::ApiGateway::Resource
        Properties:
          RestApiId: !Ref UnitedTutoringAPIs
          PathPart: saveslot-booking
          ParentId:
            Fn::GetAtt:
              - UnitedTutoringAPIs
              - RootResourceId
  SaveSlotBookingOption:
      Type: AWS::ApiGateway::Method
      Properties:
        AuthorizationType: NONE
        RestApiId:
          Ref: UnitedTutoringAPIs
        ResourceId:
          Ref: ResourceSaveSlotBooking
        HttpMethod: OPTIONS
        Integration:
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            ResponseTemplates:
              application/json: ''
          RequestTemplates:
            application/json: '{"statusCode": 200}'
          Type: MOCK
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false
  SaveSlotBookingPost:
      Type: 'AWS::ApiGateway::Method'
      Properties:
        ApiKeyRequired: false
        AuthorizationType: COGNITO_USER_POOLS
        AuthorizerId: !Ref Authorizer
        HttpMethod: POST
        ResourceId:
          Ref: ResourceSaveSlotBooking
        RestApiId:
          Ref: UnitedTutoringAPIs
        
        Integration:
          IntegrationHttpMethod: POST
          Type: AWS_PROXY
          Uri:
            'Fn::Join':
              - ''
              - - 'arn:aws:apigateway:'
                - Ref: 'AWS::Region'
                - ':lambda:path/2015-03-31/functions/'
                - 'Fn::GetAtt':
                    - LambdaSaveBookingDetails
                    - Arn
                - /invocations
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'POST'"
              "method.response.header.Access-Control-Allow-Origin" : "'*'"
          
            ResponseTemplates:
              application/json: ''
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false            

  ResourceSubscribe:
        Type: AWS::ApiGateway::Resource
        Properties:
          RestApiId: !Ref UnitedTutoringAPIs
          PathPart: subscribe
          ParentId:
            Fn::GetAtt:
              - UnitedTutoringAPIs
              - RootResourceId
  SubscribeOption:
      Type: AWS::ApiGateway::Method
      Properties:
        AuthorizationType: NONE
        RestApiId:
          Ref: UnitedTutoringAPIs
        ResourceId:
          Ref: ResourceSubscribe
        HttpMethod: OPTIONS
        Integration:
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            ResponseTemplates:
              application/json: ''
          RequestTemplates:
            application/json: '{"statusCode": 200}'
          Type: MOCK
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false
  SubscribeGET:
      Type: 'AWS::ApiGateway::Method'
      Properties:
        ApiKeyRequired: false
        AuthorizationType: NONE
        HttpMethod: GET
        ResourceId:
          Ref: ResourceSubscribe
        RestApiId:
          Ref: UnitedTutoringAPIs
        
        Integration:
          IntegrationHttpMethod: GET
          Type: AWS_PROXY
          Uri:
            'Fn::Join':
              - ''
              - - 'arn:aws:apigateway:'
                - Ref: 'AWS::Region'
                - ':lambda:path/2015-03-31/functions/'
                - 'Fn::GetAtt':
                    - LambdaSubscribeForEmailNotification
                    - Arn
                - /invocations
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'GET'"
              "method.response.header.Access-Control-Allow-Origin" : "'*'"
          
            ResponseTemplates:
              application/json: ''
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false            

  ResourceUpdateRequest:
        Type: AWS::ApiGateway::Resource
        Properties:
          RestApiId: !Ref UnitedTutoringAPIs
          PathPart: updaterequest 
          ParentId:
            Fn::GetAtt:
              - UnitedTutoringAPIs
              - RootResourceId
  UpdateRequestOption:
      Type: AWS::ApiGateway::Method
      Properties:
        AuthorizationType: NONE
        RestApiId:
          Ref: UnitedTutoringAPIs
        ResourceId:
          Ref: ResourceUpdateRequest
        HttpMethod: OPTIONS
        Integration:
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            ResponseTemplates:
              application/json: ''
          RequestTemplates:
            application/json: '{"statusCode": 200}'
          Type: MOCK
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false
  UpdateRequestPost:
      Type: 'AWS::ApiGateway::Method'
      Properties:
        ApiKeyRequired: false
        AuthorizationType: COGNITO_USER_POOLS
        AuthorizerId: !Ref Authorizer
        HttpMethod: POST
        ResourceId:
          Ref: ResourceUpdateRequest
        RestApiId:
          Ref: UnitedTutoringAPIs
        
        Integration:
          IntegrationHttpMethod: POST
          Type: AWS_PROXY
          Uri:
            'Fn::Join':
              - ''
              - - 'arn:aws:apigateway:'
                - Ref: 'AWS::Region'
                - ':lambda:path/2015-03-31/functions/'
                - 'Fn::GetAtt':
                    - LambdaUpdateRequest
                    - Arn
                - /invocations
          IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'POST'"
              "method.response.header.Access-Control-Allow-Origin" : "'*'"
          
            ResponseTemplates:
              application/json: ''
        MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": false
              "method.response.header.Access-Control-Allow-Methods": false
              "method.response.header.Access-Control-Allow-Origin": false


  LambdaCronJobPermission:
      Type: AWS::Lambda::Permission
      Properties: 
        FunctionName:
          'Fn::GetAtt':
            - LambdaCronJob
            - Arn
        Action: "lambda:InvokeFunction"
        Principal: "events.amazonaws.com"
        SourceArn: 
          Fn::GetAtt:
              - CronJobRule
              - "Arn"

Outputs:
  CognitoUserPoolID:
    Value: !Ref UserPool
    Description: The UserPool ID
  CognitoAppClientID:
    Value: !Ref UserPoolClient
    Description: The app client
  HostedUIURL:
    Value: !Sub https://${CognitoDomain}.auth.us-west-2.amazoncognito.com/login?client_id=${UserPoolClient}&response_type=code&scope=email+openid+phone+profile&redirect_uri=http://localhost:3000
    Description: The hosted UI URL
